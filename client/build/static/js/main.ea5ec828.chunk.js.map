{"version":3,"sources":["components/Jumbotron/index.js","components/Nav/index.js","components/Input/index.js","components/Button/index.js","utils/API.js","components/Thumbnail/index.js","components/Grid/index.js","components/RecipeList/index.js","App.js","index.js"],"names":["Jumbotron","react_default","a","createElement","className","target","rel","href","Nav","Input","props","Object","assign","type","Button","_ref","_ref$type","children","onClick","concat","join","API","getRecipes","query","axios","get","params","q","getGoogleBooks","Thumbnail","src","role","aria-label","style","backgroundImage","Container","fluid","Row","_ref2","Col","_ref3","size","split","map","RecipeList","RecipeListItem","title","subtitle","authors","description","thumbnail","components_Thumbnail","App","state","recipes","recipeSearch","handleInputChange","event","_event$target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","then","res","data","items","console","log","catch","err","components_Nav","components_Jumbotron","components_Input","this","onChange","placeholder","components_Button","length","recipe","key","volumeInfo","imageLinks","previewLink","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ea5ec828.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron text-center\">\r\n      <h1>React Recipes</h1>\r\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.recipepuppy.com/about/api/\">\r\n        Powered by Recipe Puppy\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        React Recipes\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\n// This component lets us use a bootstrap input element without worrying about class names\r\n// or manually wrapping the input with a form-group div\r\n// All of the props passed to this component are spread onto the input element\r\nfunction Input(props) {\r\n  return (\r\n    <div className=\"input-group input-group-lg\">\r\n      <input className=\"form-control\" type=\"text\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\n// Destructuring the type, className, children and onClick props, applying them to the button element\r\nfunction Button({ type = \"default\", className, children, onClick }) {\r\n  return (\r\n    <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\n\r\n// The getRecipes method retrieves recipes from the server\r\n// It accepts a \"query\" or term to search the recipe api for\r\nexport default {\r\n  getRecipes: function(query) {\r\n    return axios.get(\"/api/recipes\", { params: { q: query } });\r\n  },\r\n  getGoogleBooks: function(query) {\r\n    return axios.get(\"api/google\", { params: { q: query } });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// The Thumbnail component renders a div that uses some CSS to render a background image\r\n// It will always keep square proportions at any size without the image warping\r\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\r\nfunction Thumbnail({ src }) {\r\n  return (\r\n    <div\r\n      className=\"thumbnail\"\r\n      role=\"img\"\r\n      aria-label=\"Recipe Image\"\r\n      style={{\r\n        backgroundImage: `url(${src})`\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Thumbnail;\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Thumbnail from \"../Thumbnail\";\r\nimport { Container, Row, Col } from \"../Grid\";\r\n\r\n// Exporting both RecipeList and RecipeListItem from this file\r\n\r\n// RecipeList renders a bootstrap list item\r\nexport function RecipeList({ children }) {\r\n  return <ul className=\"list-group\">{children}</ul>;\r\n}\r\n\r\n// RecipeListItem renders a bootstrap list item containing data from the recipe api call\r\nexport function RecipeListItem({\r\n  \r\n  title,\r\n  subtitle,\r\n  authors,\r\n  description,\r\n  thumbnail ,\r\n  href\r\n}) {\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"xs-4 sm-2\">\r\n            <Thumbnail src={thumbnail} />\r\n          </Col>\r\n          <Col size=\"xs-8 sm-9\">\r\n            <h3>{title}</h3>\r\n            <h4>{ subtitle}</h4>\r\n            <h4> {authors} </h4>\r\n            <p>description: {description}</p>\r\n\r\n    \r\n            <a rel=\"noreferrer noopener\" target=\"_blank\" href={href}>\r\n              Go to {title}\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </li>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\nimport Nav from \"./components/Nav\";\r\nimport Input from \"./components/Input\";\r\nimport Button from \"./components/Button\";\r\nimport API from \"./utils/API\";\r\nimport { RecipeList, RecipeListItem } from \"./components/RecipeList\";\r\nimport { Container, Row, Col } from \"./components/Grid\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    recipes: [],\r\n    recipeSearch: \"\"\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    // Destructure the name and value properties off of event.target\r\n    // Update the appropriate state\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\r\n    event.preventDefault();\r\n    API.getGoogleBooks(this.state.recipeSearch)\r\n      .then(res =>{\r\n      \r\n        this.setState({ recipes: res.data.items }) \r\n        console.log(this.state.recipes)\r\n         \r\n    })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav />\r\n        <Jumbotron />\r\n        <Container>\r\n          <Row>\r\n            <Col size=\"md-12\">\r\n              <form>\r\n                <Container>\r\n                  <Row>\r\n                    <Col size=\"xs-9 sm-10\">\r\n                      <Input\r\n                        name=\"recipeSearch\"\r\n                        value={this.state.recipeSearch}\r\n                        onChange={this.handleInputChange}\r\n                        placeholder=\"Search For a Recipe\"\r\n                      />\r\n                    </Col>\r\n                    <Col size=\"xs-3 sm-2\">\r\n                      <Button\r\n                        onClick={this.handleFormSubmit}\r\n                        type=\"success\"\r\n                        className=\"input-lg\"\r\n                      >\r\n                        Search\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </form>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col size=\"xs-12\">\r\n              {!this.state.recipes.length ? (\r\n                <h1 className=\"text-center\" > {this.state.recipes.length} No Recipes to Display....</h1>\r\n              ) : (\r\n                <RecipeList>\r\n                  {this.state.recipes.map(recipe => {\r\n                    return (\r\n                      <RecipeListItem\r\n                        key={recipe.volumeInfo.title}\r\n                        title={recipe.volumeInfo.title}\r\n                        subtitle={recipe.volumeInfo.subtitle}\r\n                        authors={recipe.volumeInfo.authors}\r\n                        description={recipe.volumeInfo.description}\r\n                        thumbnail={recipe.volumeInfo.imageLinks.thumbnail}\r\n                        href={recipe.volumeInfo.previewLink}\r\n\r\n                      />\r\n                    );\r\n                  })}\r\n                </RecipeList>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}